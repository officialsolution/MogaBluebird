@model Consoller.Areas.Auth.Models.tblfeedback
@using Consoller.Areas.Auth.Models
@{
    ViewBag.Title = "IeltsLogs";
    Layout = "~/Views/Shared/main.cshtml";
    dbcontext db = new dbcontext();
    IEnumerable<tblfeedback> logs = db.tblfeedback.Where(x => x.inquiryid == Model.inquiryid).ToList();


    int count = 0;
}

<h2>IeltsLogs</h2>

<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title mb-5">Vertical Timeline</h4>
                <div class="">
                    <ul class="verti-timeline list-unstyled">
@if (Model != null)
{
    foreach (var item in logs)
    {
                        <li class="event-list">
                            <div class="event-timeline-dot">
                                <i class="bx bx-right-arrow-circle"></i>
                            </div>
                            <div class="media">
                                <div class="mr-3">
                                    <i class="bx bx-copy-alt h2 text-primary"></i>
                                </div>
                                <div class="media-body">
                                    <div>
                                        <h5>@db.tblreceptionists.FirstOrDefault(x => x.rid == item.loginid).name <span>@Convert.ToDateTime(item.date).ToString("dd/MM/yyy")</span></h5>
                                        <p class="text-muted">@Html.Raw(item.feedback)</p>

                                    </div>
                                </div>
                            </div>
                        </li>
    }
}
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="widget no-padding blank">
    <div class="card">
        <div class="card-body">
            <div class="widget white with-padding">
                <div class="col-md-12 padding-l-0">
                    @using (Html.BeginForm("IeltsLogs", "Consoller"))
            {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.inquiryid)
            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group1 col-md-12">

                    @Html.LabelFor(model => model.feedback, htmlAttributes: new { @class = "control-label" })

                    @Html.TextAreaFor(model => model.feedback, 10, 10, htmlAttributes: new { style = "width: 100%; max-width: 100%;" })
                    @Html.ValidationMessageFor(model => model.feedback, "", new { @class = "text-danger" })



                </div>


                <div class="form-group1 col-md-4">
                    <label>Follow Up Days</label>
                    @Html.EditorFor(model => model.days, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="form-group1 col-md-4">
                    @Html.EditorFor(model => model.status)
                </div>

                <div class="form-group1" style="padding-top:20px">
                    <div class="col-md-10">
                        <input type="submit" value="Create" class="btn btn-danger" />
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-danger" })

                    </div>
                </div>

            </div>
            }
                </div>
            </div>
        </div>
        </div>
</div>