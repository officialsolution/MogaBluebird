@model Consoller.Areas.Auth.Models.Notification
@using Consoller.Areas.Auth.Models
@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/Layout.cshtml";
    dbcontext db = new dbcontext();
    IEnumerable<tblreceptionist> ss = db.tblreceptionists.Where(x=>x.Type=="Consoller").ToList();
    <style>
        .line {
            display: inline;
            float: left;
            width: 310px;
        }
    </style>
}

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
     
            <div class="card">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-8">
                            <h2>Create</h2>



                            <div class="form-horizontal">
                                <h4>Notification</h4>
                                <hr />
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                                <div class="form-group">
                                    @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.Priority, new SelectList(Enum.GetValues(typeof(Consoller.Areas.Auth.Models.Priority))), "Select Priority", new { @class = "form-control" })

                                        @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                                <div class="form-group">
                                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        <div class="checkbox">
                                            @Html.EditorFor(model => model.Status)
                                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Create" class="btn btn-primary" />
                                    </div>
                                </div>
                            </div>


                            <div>
                                @Html.ActionLink("Back to List", "Index")
                            </div>
                        </div>
                        <div class="col-md-4">
                            @foreach (var item in ss)
                            {
                            <span class="line">
                                <input type="checkbox" value="@item.name" name="take" id="@item.rid" />@item.name
                            </span>
                            }
                        </div>
                        </div>
                    </div>
                </div>
        
    }

