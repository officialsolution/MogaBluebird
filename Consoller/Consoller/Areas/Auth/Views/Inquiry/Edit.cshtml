@model Consoller.Areas.Auth.Models.tblinquiry
@using Consoller.Areas.Auth.Models

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Auth/Views/Shared/Layout.cshtml";
    dbcontext db = new dbcontext();
    var inquiry = TempData["feedback"].ToString();
    tblfeedback tblfeedback = db.tblfeedback.OrderByDescending(x=>x.Id).FirstOrDefault(x => x.inquiryid == inquiry);
}
<h2><b>Inquiry</b></h2>

@using (Html.BeginForm("Edit", "Inquiry", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Edit</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => tblfeedback.Id)
    @Html.HiddenFor(model => tblfeedback.type)
    @Html.HiddenFor(model => model.franchid)
    @Html.HiddenFor(model => model.teacher)

    <div class="form-group">
        @Html.Label("Date", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.date, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("inquiryid", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.inquiryid, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.inquiryid, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Father Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.fname, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.fname, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Contact", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.contact, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.contact, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Address", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Category", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Categoryid", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Categoryid, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="row">

            <div class="col-md-5">
                @Html.Label("Follow Up", htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.DropDownListFor(model => tblfeedback.type,
                    new SelectList(Enum.GetValues(typeof(Consoller.Areas.Auth.Models.InquiryType))),
                    "Select Type",
                    new { @class = "form-control" })
            </div>
            <div class="col-md-5">

                <div class="form-group">
                    @Html.Label("Days", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => tblfeedback.days, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => tblfeedback.days, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Refered By", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.referedby, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.referedby, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Reply", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => tblfeedback.feedback, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => tblfeedback.feedback, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Status", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.status)
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-danger" />
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-danger" })
        </div>
    </div>
</div>
}

<div>

</div>
