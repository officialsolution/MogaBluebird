@model Consoller.Areas.Auth.Models.online
@using Consoller.Areas.Auth.Models
@{
    ViewBag.Title = "LogHistory";
    Layout = "~/Views/Shared/main.cshtml";
    dbcontext db = new dbcontext();
    IEnumerable<Logs> logs = db.Logs.Where(x => x.inquiryid == Model.inquiryid && x.franchid==Model.franchid);
    Logs log = new Logs();
    int count = 0;
    ViewBag.Mid = new SelectList(db.Months.ToList(), "Mid", "Name");
    ViewBag.Yid = new SelectList(db.Years.ToList(), "Yid", "Name");
    Application appyear = new Application();
}

<div class="widget no-padding blank">
    <div class="timeline-sec">
        <ul>
@if (Model != null)
{
    foreach (var item in logs)
    {
        <li>
            <div class="timeline">
                <div class="user-timeline"> <span><img src="images/resource/friend-avatar.jpg" alt=""></span> </div>
                <div class="timeline-detail">
                    <div class="timeline-head">
                        <h3>@db.tblreceptionists.FirstOrDefault(x => x.rid == item.teacher).name <span>@item.Date</span><i class="red">Admin</i></h3>
                        <div class="social-share">
                            <a title=""><i class="ti-sharethis"></i></a>
                            <ul class="social-btns">
                                <li><a title="Facebook" href="#"><i class="ti-facebook"></i></a></li>
                                <li><a title="Google" href="#"><i class="ti-google"></i></a></li>
                                <li><a title="Twitter" href="#"><i class="ti-twitter"></i></a></li>
                            </ul>
                        </div>
                    </div>
                    <div class="timeline-content">
                        @item.Description
                        @{ 
                            if (item.Description!=null)
                            {
                                int len = item.Description.Length;
                                if(len>100)
                                {
                                    count = (len*100) / 1000;

                                }
                                else
                                {
                                    count = len;
                                }

                            }
                        }
                        <div class="progress w-tooltip">
                            <div style="width: @count%;" aria-valuemax="100" aria-valuemin="0" aria-valuenow="@count" role="progressbar" class="purple progress-bar"> <span><i>uploading</i>70%</span> </div>
                        </div>
                        
                    </div>
                </div>
            </div>
        </li>
    }
}
            
   
        </ul>
    </div>
    <div class="widget white with-padding">
        <div class="col-md-12 padding-l-0">
            @using (Html.BeginForm("InsertLogs", "Consoller"))
        {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.inquiryid)
        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group1 col-md-12">

                @Html.LabelFor(model => log.Description, htmlAttributes: new { @class = "control-label" })

                @Html.TextAreaFor(model => log.Description, 10, 10, htmlAttributes: new { style = "width: 100%; max-width: 100%;" })   
                @Html.ValidationMessageFor(model => log.Description, "", new { @class = "text-danger" })



            </div>
           
            
                <div class="form-group1 col-md-4">
                    <label>Status</label>
                    @Html.DropDownListFor(model => log.Status,
                                new SelectList(Enum.GetValues(typeof(Consoller.Areas.Auth.Models.ConsollerStatus))),
                                "Select Status",
                                new { @class = "form-control", onclick = "myFunction()", id = "ddlViewBy" })
                </div>
                <div class="form-group1 col-md-4" id="myDIV">
                   

                    @Html.DropDownListFor(model => appyear.Month, (SelectList)ViewBag.Mid, htmlAttributes: new { @class = "form-control", id = "Month" })
                    @Html.DropDownListFor(model => appyear.Year, (SelectList)ViewBag.Yid, htmlAttributes: new { @class = "form-control", id = "Year" })

                </div>
                
                <div class="form-group1" style="padding-top:20px">
                    <div class="col-md-10">
                        <input type="submit" value="Create" class="btn btn-danger" />
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-danger" })

                    </div>
                </div>
           
        </div>
        }
        </div>
    </div>
    </div>

<script>
    function myFunction() {
        debugger;
        var x = document.getElementById("myDIV");
        var e = document.getElementById("ddlViewBy");
        var strUser = e.options[e.selectedIndex].text;
        if (strUser == "Confirm") {
            x.style.display = "block";
        } else {
            x.style.display = "none";
        }
    }
    function alertstatus() {
        debugger;
        
        var e = document.getElementById("ddlViewBy");
        var strUser = e.options[e.selectedIndex].text;
        if (strUser == "Select Status") {
            alert('select status')
            return false;
        }
        else {
            return true;
        }
    }
</script>
<style>
    #myDIV {
        display: none;
    }
</style>