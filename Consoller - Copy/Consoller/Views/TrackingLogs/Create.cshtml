@model Consoller.Areas.Auth.Models.TrackingLogs
@using Consoller.Areas.Auth.Models
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/main.cshtml";
    dbcontext db = new dbcontext();
    IEnumerable<TrackingLogs> tl = db.TrackingLogs.Where(x => x.ApplicationNo == Model.ApplicationNo).ToList();
}


<div class="card">
    <div class="card-body">
   @using (Html.BeginForm("Create", "TrackingLogs", FormMethod.Post, new { enctype = "multipart/form-data" }))
   {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>TrackingLogs</h4>

                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ApplicationNo)
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Pid,"Steps", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-12">
                                @Html.DropDownListFor(model => model.Pid,
                                new SelectList(Enum.GetValues(typeof(Consoller.Areas.Auth.Models.steps))),
                                "Select Process",
                                new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Pid, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Files,"Document", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-12">
                                <input id="file" type="file" title="search image" class="form-control" name="file" />
                                @Html.ValidationMessageFor(model => model.Files, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>







                <div class="form-group">
                    @Html.LabelFor(model => model.Show, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Show)
                            @Html.ValidationMessageFor(model => model.Show, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>



                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-primary" /> | @Html.ActionLink("Back to List", "Index")
                    </div>
                </div>
            </div>
        }

        <div>

        </div>
    </div>
</div>
@if (tl != null)
{

    <div class="card">
        <div class="card-body">
            <h4>Manage Logs</h4>

            <hr />
            <table class="table table-bordered">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Date)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Description)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Files)
                    </th>
                    <th>
                        Steps
                    </th>

                    <th></th>
                </tr>

                @foreach (var item in tl)
        {
        <tr>
            <td>
                @Convert.ToDateTime(item.Date).ToString("dd/MM/yyyy")
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                <a href="~/Uploadfile/@item.Files" target="_blank">Download</a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Pid)
            </td>

            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Tid }) |
                @Html.ActionLink("Details", "Details", new { id = item.Tid }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Tid })
            </td>
        </tr>
        }

            </table>
        </div>
    </div>
            }
