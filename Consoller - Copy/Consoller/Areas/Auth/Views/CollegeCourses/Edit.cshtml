@model Consoller.Areas.Auth.Models.CollegeCourse
@using Consoller.Areas.Auth.Models
@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Auth/Views/Shared/Layout.cshtml";
    dbcontext db = new dbcontext();
    IEnumerable<Section> ss = db.Sections.ToList();
}

<h2>Edit</h2>
<div class="card">
    <div class="card-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>CollegeCourse</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.CCid)
                @Html.HiddenFor(model => model.Code)
                <div class="row">
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.Cid, htmlAttributes: new { @class = "control-label " })
                        <div class="col-md-12">
                            @Html.DropDownList("Cid", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Cid, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.Oid, htmlAttributes: new { @class = "control-label " })
                        <div class="col-md-12">
                            @Html.DropDownList("Oid", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Oid, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.ProgramLength, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.ProgramLength, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProgramLength, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.ApplicationFee, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.ApplicationFee, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ApplicationFee, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.TuitionFee, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.TuitionFee, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TuitionFee, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.LivingCost, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.LivingCost, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LivingCost, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                         @Html.TextAreaFor(model => model.Description, 10, 10, htmlAttributes: new { style = "width: 100%; max-width: 100%;" })   
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-12">
                        <h4>Intake</h4>
                        <hr />
                        <div class="col-md-12">
                            <div class="row">

                                @foreach (var item in ss)
                                {

                                    Intake take = db.Intakes.FirstOrDefault(x => x.CCid == Model.Code && x.IntakeName == item.Name && x.Status == true);
                                    if (take != null)
                                    {
                                        <div class="custom-control custom-checkbox col-md-1">
                                            <input type="checkbox" class="custom-control-input" value="@item.Name" name="take" checked="checked" id="formrow-customCheck-@item.Sid">
                                            <label class="custom-control-label" for="formrow-customCheck-@item.Sid">@item.Name</label>
                                        </div>
                                        @*<input type="checkbox" value="@item.Name" name="take" id="@item.Sid" checked="checked" />@item.Name*@
                                    }
                                    else
                                    {
                                        <div class="custom-control custom-checkbox col-md-1">
                                            <input type="checkbox" class="custom-control-input" value="@item.Name" name="take" id="formrow-customCheck-@item.Sid">
                                            <label class="custom-control-label" for="formrow-customCheck-@item.Sid">@item.Name</label>
                                        </div>
                                        @*<input type="checkbox" value="@item.Name" name="take" id="@item.Sid" />@item.Name*@
                                    }

                                }
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
        </div>
</div>